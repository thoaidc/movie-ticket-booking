# /etc/nginx/nginx.conf

user root;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name localhost;

        location / {
           root /usr/share/nginx/html;
           index index.html;

           # if the requested URI is not a file, and not a directory,
           # serve index.html instead so Angular can take over routing
           try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the Spring Boot backend
        location /api {
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy WebSocket connections to Spring Boot backend
        location /ws {
            proxy_pass http://localhost:8080;

            # Ensure WebSocket upgrade headers are passed through correctly
            proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket connections
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';  # Required for WebSocket handshake
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
